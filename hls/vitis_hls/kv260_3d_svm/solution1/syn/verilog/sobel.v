// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="sobel_sobel,hls_ip_2021_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xck26-sfvc784-2LV-c,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.298875,HLS_SYN_LAT=921628,HLS_SYN_TPT=none,HLS_SYN_MEM=10,HLS_SYN_DSP=0,HLS_SYN_FF=4192,HLS_SYN_LUT=5673,HLS_VERSION=2021_1}" *)

module sobel (
        ap_clk,
        ap_rst_n,
        in_r_TVALID,
        out_r_TREADY,
        in_r_TDATA,
        in_r_TREADY,
        in_r_TKEEP,
        in_r_TSTRB,
        in_r_TUSER,
        in_r_TLAST,
        in_r_TID,
        in_r_TDEST,
        out_r_TDATA,
        out_r_TVALID,
        out_r_TKEEP,
        out_r_TSTRB,
        out_r_TUSER,
        out_r_TLAST,
        out_r_TID,
        out_r_TDEST,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   in_r_TVALID;
input   out_r_TREADY;
input  [31:0] in_r_TDATA;
output   in_r_TREADY;
input  [3:0] in_r_TKEEP;
input  [3:0] in_r_TSTRB;
input  [0:0] in_r_TUSER;
input  [0:0] in_r_TLAST;
input  [0:0] in_r_TID;
input  [0:0] in_r_TDEST;
output  [31:0] out_r_TDATA;
output   out_r_TVALID;
output  [3:0] out_r_TKEEP;
output  [3:0] out_r_TSTRB;
output  [0:0] out_r_TUSER;
output  [0:0] out_r_TLAST;
output  [0:0] out_r_TID;
output  [0:0] out_r_TDEST;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
wire    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_idle_pp0;
wire    ap_ready;
wire   [0:0] tmp_nbreadreq_fu_228_p9;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_state25_pp0_stage0_iter24;
wire    ap_block_state26_pp0_stage0_iter25;
reg   [0:0] tmp_reg_1202;
reg   [0:0] tmp_reg_1202_pp0_iter25_reg;
wire    regslice_both_out_V_data_V_U_apdone_blk;
reg    ap_block_state27_pp0_stage0_iter26;
reg    ap_block_state27_io;
reg    ap_block_state28_pp0_stage0_iter27;
wire    ap_loop_exit_ready;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_exit_pp0_iter0_stage0;
reg    ap_ready_int;
reg    in_r_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    out_r_TDATA_blk_n;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] tmp_reg_1202_pp0_iter1_reg;
reg   [0:0] tmp_reg_1202_pp0_iter2_reg;
reg   [0:0] tmp_reg_1202_pp0_iter3_reg;
reg   [0:0] tmp_reg_1202_pp0_iter4_reg;
reg   [0:0] tmp_reg_1202_pp0_iter5_reg;
reg   [0:0] tmp_reg_1202_pp0_iter6_reg;
reg   [0:0] tmp_reg_1202_pp0_iter7_reg;
reg   [0:0] tmp_reg_1202_pp0_iter8_reg;
reg   [0:0] tmp_reg_1202_pp0_iter9_reg;
reg   [0:0] tmp_reg_1202_pp0_iter10_reg;
reg   [0:0] tmp_reg_1202_pp0_iter11_reg;
reg   [0:0] tmp_reg_1202_pp0_iter12_reg;
reg   [0:0] tmp_reg_1202_pp0_iter13_reg;
reg   [0:0] tmp_reg_1202_pp0_iter14_reg;
reg   [0:0] tmp_reg_1202_pp0_iter15_reg;
reg   [0:0] tmp_reg_1202_pp0_iter16_reg;
reg   [0:0] tmp_reg_1202_pp0_iter17_reg;
reg   [0:0] tmp_reg_1202_pp0_iter18_reg;
reg   [0:0] tmp_reg_1202_pp0_iter19_reg;
reg   [0:0] tmp_reg_1202_pp0_iter20_reg;
reg   [0:0] tmp_reg_1202_pp0_iter21_reg;
reg   [0:0] tmp_reg_1202_pp0_iter22_reg;
reg   [0:0] tmp_reg_1202_pp0_iter23_reg;
reg   [0:0] tmp_reg_1202_pp0_iter24_reg;
reg   [3:0] pixel_in_1_reg_1206;
reg   [3:0] pixel_in_1_reg_1206_pp0_iter1_reg;
reg   [3:0] pixel_in_1_reg_1206_pp0_iter2_reg;
reg   [3:0] pixel_in_1_reg_1206_pp0_iter3_reg;
reg   [3:0] pixel_in_1_reg_1206_pp0_iter4_reg;
reg   [3:0] pixel_in_1_reg_1206_pp0_iter5_reg;
reg   [3:0] pixel_in_1_reg_1206_pp0_iter6_reg;
reg   [3:0] pixel_in_1_reg_1206_pp0_iter7_reg;
reg   [3:0] pixel_in_1_reg_1206_pp0_iter8_reg;
reg   [3:0] pixel_in_1_reg_1206_pp0_iter9_reg;
reg   [3:0] pixel_in_1_reg_1206_pp0_iter10_reg;
reg   [3:0] pixel_in_1_reg_1206_pp0_iter11_reg;
reg   [3:0] pixel_in_1_reg_1206_pp0_iter12_reg;
reg   [3:0] pixel_in_1_reg_1206_pp0_iter13_reg;
reg   [3:0] pixel_in_1_reg_1206_pp0_iter14_reg;
reg   [3:0] pixel_in_1_reg_1206_pp0_iter15_reg;
reg   [3:0] pixel_in_1_reg_1206_pp0_iter16_reg;
reg   [3:0] pixel_in_1_reg_1206_pp0_iter17_reg;
reg   [3:0] pixel_in_1_reg_1206_pp0_iter18_reg;
reg   [3:0] pixel_in_1_reg_1206_pp0_iter19_reg;
reg   [3:0] pixel_in_1_reg_1206_pp0_iter20_reg;
reg   [3:0] pixel_in_1_reg_1206_pp0_iter21_reg;
reg   [3:0] pixel_in_1_reg_1206_pp0_iter22_reg;
reg   [3:0] pixel_in_1_reg_1206_pp0_iter23_reg;
reg   [3:0] pixel_in_1_reg_1206_pp0_iter24_reg;
reg   [3:0] pixel_in_1_reg_1206_pp0_iter25_reg;
reg   [3:0] pixel_in_2_reg_1211;
reg   [3:0] pixel_in_2_reg_1211_pp0_iter1_reg;
reg   [3:0] pixel_in_2_reg_1211_pp0_iter2_reg;
reg   [3:0] pixel_in_2_reg_1211_pp0_iter3_reg;
reg   [3:0] pixel_in_2_reg_1211_pp0_iter4_reg;
reg   [3:0] pixel_in_2_reg_1211_pp0_iter5_reg;
reg   [3:0] pixel_in_2_reg_1211_pp0_iter6_reg;
reg   [3:0] pixel_in_2_reg_1211_pp0_iter7_reg;
reg   [3:0] pixel_in_2_reg_1211_pp0_iter8_reg;
reg   [3:0] pixel_in_2_reg_1211_pp0_iter9_reg;
reg   [3:0] pixel_in_2_reg_1211_pp0_iter10_reg;
reg   [3:0] pixel_in_2_reg_1211_pp0_iter11_reg;
reg   [3:0] pixel_in_2_reg_1211_pp0_iter12_reg;
reg   [3:0] pixel_in_2_reg_1211_pp0_iter13_reg;
reg   [3:0] pixel_in_2_reg_1211_pp0_iter14_reg;
reg   [3:0] pixel_in_2_reg_1211_pp0_iter15_reg;
reg   [3:0] pixel_in_2_reg_1211_pp0_iter16_reg;
reg   [3:0] pixel_in_2_reg_1211_pp0_iter17_reg;
reg   [3:0] pixel_in_2_reg_1211_pp0_iter18_reg;
reg   [3:0] pixel_in_2_reg_1211_pp0_iter19_reg;
reg   [3:0] pixel_in_2_reg_1211_pp0_iter20_reg;
reg   [3:0] pixel_in_2_reg_1211_pp0_iter21_reg;
reg   [3:0] pixel_in_2_reg_1211_pp0_iter22_reg;
reg   [3:0] pixel_in_2_reg_1211_pp0_iter23_reg;
reg   [3:0] pixel_in_2_reg_1211_pp0_iter24_reg;
reg   [3:0] pixel_in_2_reg_1211_pp0_iter25_reg;
reg   [0:0] pixel_in_3_reg_1216;
reg   [0:0] pixel_in_3_reg_1216_pp0_iter1_reg;
reg   [0:0] pixel_in_3_reg_1216_pp0_iter2_reg;
reg   [0:0] pixel_in_3_reg_1216_pp0_iter3_reg;
reg   [0:0] pixel_in_3_reg_1216_pp0_iter4_reg;
reg   [0:0] pixel_in_3_reg_1216_pp0_iter5_reg;
reg   [0:0] pixel_in_3_reg_1216_pp0_iter6_reg;
reg   [0:0] pixel_in_3_reg_1216_pp0_iter7_reg;
reg   [0:0] pixel_in_3_reg_1216_pp0_iter8_reg;
reg   [0:0] pixel_in_3_reg_1216_pp0_iter9_reg;
reg   [0:0] pixel_in_3_reg_1216_pp0_iter10_reg;
reg   [0:0] pixel_in_3_reg_1216_pp0_iter11_reg;
reg   [0:0] pixel_in_3_reg_1216_pp0_iter12_reg;
reg   [0:0] pixel_in_3_reg_1216_pp0_iter13_reg;
reg   [0:0] pixel_in_3_reg_1216_pp0_iter14_reg;
reg   [0:0] pixel_in_3_reg_1216_pp0_iter15_reg;
reg   [0:0] pixel_in_3_reg_1216_pp0_iter16_reg;
reg   [0:0] pixel_in_3_reg_1216_pp0_iter17_reg;
reg   [0:0] pixel_in_3_reg_1216_pp0_iter18_reg;
reg   [0:0] pixel_in_3_reg_1216_pp0_iter19_reg;
reg   [0:0] pixel_in_3_reg_1216_pp0_iter20_reg;
reg   [0:0] pixel_in_3_reg_1216_pp0_iter21_reg;
reg   [0:0] pixel_in_3_reg_1216_pp0_iter22_reg;
reg   [0:0] pixel_in_3_reg_1216_pp0_iter23_reg;
reg   [0:0] pixel_in_3_reg_1216_pp0_iter24_reg;
reg   [0:0] pixel_in_3_reg_1216_pp0_iter25_reg;
reg   [0:0] pixel_in_4_reg_1223;
reg   [0:0] pixel_in_4_reg_1223_pp0_iter1_reg;
reg   [0:0] pixel_in_4_reg_1223_pp0_iter2_reg;
reg   [0:0] pixel_in_4_reg_1223_pp0_iter3_reg;
reg   [0:0] pixel_in_4_reg_1223_pp0_iter4_reg;
reg   [0:0] pixel_in_4_reg_1223_pp0_iter5_reg;
reg   [0:0] pixel_in_4_reg_1223_pp0_iter6_reg;
reg   [0:0] pixel_in_4_reg_1223_pp0_iter7_reg;
reg   [0:0] pixel_in_4_reg_1223_pp0_iter8_reg;
reg   [0:0] pixel_in_4_reg_1223_pp0_iter9_reg;
reg   [0:0] pixel_in_4_reg_1223_pp0_iter10_reg;
reg   [0:0] pixel_in_4_reg_1223_pp0_iter11_reg;
reg   [0:0] pixel_in_4_reg_1223_pp0_iter12_reg;
reg   [0:0] pixel_in_4_reg_1223_pp0_iter13_reg;
reg   [0:0] pixel_in_4_reg_1223_pp0_iter14_reg;
reg   [0:0] pixel_in_4_reg_1223_pp0_iter15_reg;
reg   [0:0] pixel_in_4_reg_1223_pp0_iter16_reg;
reg   [0:0] pixel_in_4_reg_1223_pp0_iter17_reg;
reg   [0:0] pixel_in_4_reg_1223_pp0_iter18_reg;
reg   [0:0] pixel_in_4_reg_1223_pp0_iter19_reg;
reg   [0:0] pixel_in_4_reg_1223_pp0_iter20_reg;
reg   [0:0] pixel_in_4_reg_1223_pp0_iter21_reg;
reg   [0:0] pixel_in_4_reg_1223_pp0_iter22_reg;
reg   [0:0] pixel_in_4_reg_1223_pp0_iter23_reg;
reg   [0:0] pixel_in_4_reg_1223_pp0_iter24_reg;
reg   [0:0] pixel_in_4_reg_1223_pp0_iter25_reg;
reg   [0:0] pixel_in_5_reg_1229;
reg   [0:0] pixel_in_5_reg_1229_pp0_iter1_reg;
reg   [0:0] pixel_in_5_reg_1229_pp0_iter2_reg;
reg   [0:0] pixel_in_5_reg_1229_pp0_iter3_reg;
reg   [0:0] pixel_in_5_reg_1229_pp0_iter4_reg;
reg   [0:0] pixel_in_5_reg_1229_pp0_iter5_reg;
reg   [0:0] pixel_in_5_reg_1229_pp0_iter6_reg;
reg   [0:0] pixel_in_5_reg_1229_pp0_iter7_reg;
reg   [0:0] pixel_in_5_reg_1229_pp0_iter8_reg;
reg   [0:0] pixel_in_5_reg_1229_pp0_iter9_reg;
reg   [0:0] pixel_in_5_reg_1229_pp0_iter10_reg;
reg   [0:0] pixel_in_5_reg_1229_pp0_iter11_reg;
reg   [0:0] pixel_in_5_reg_1229_pp0_iter12_reg;
reg   [0:0] pixel_in_5_reg_1229_pp0_iter13_reg;
reg   [0:0] pixel_in_5_reg_1229_pp0_iter14_reg;
reg   [0:0] pixel_in_5_reg_1229_pp0_iter15_reg;
reg   [0:0] pixel_in_5_reg_1229_pp0_iter16_reg;
reg   [0:0] pixel_in_5_reg_1229_pp0_iter17_reg;
reg   [0:0] pixel_in_5_reg_1229_pp0_iter18_reg;
reg   [0:0] pixel_in_5_reg_1229_pp0_iter19_reg;
reg   [0:0] pixel_in_5_reg_1229_pp0_iter20_reg;
reg   [0:0] pixel_in_5_reg_1229_pp0_iter21_reg;
reg   [0:0] pixel_in_5_reg_1229_pp0_iter22_reg;
reg   [0:0] pixel_in_5_reg_1229_pp0_iter23_reg;
reg   [0:0] pixel_in_5_reg_1229_pp0_iter24_reg;
reg   [0:0] pixel_in_5_reg_1229_pp0_iter25_reg;
reg   [0:0] pixel_in_6_reg_1234;
reg   [0:0] pixel_in_6_reg_1234_pp0_iter1_reg;
reg   [0:0] pixel_in_6_reg_1234_pp0_iter2_reg;
reg   [0:0] pixel_in_6_reg_1234_pp0_iter3_reg;
reg   [0:0] pixel_in_6_reg_1234_pp0_iter4_reg;
reg   [0:0] pixel_in_6_reg_1234_pp0_iter5_reg;
reg   [0:0] pixel_in_6_reg_1234_pp0_iter6_reg;
reg   [0:0] pixel_in_6_reg_1234_pp0_iter7_reg;
reg   [0:0] pixel_in_6_reg_1234_pp0_iter8_reg;
reg   [0:0] pixel_in_6_reg_1234_pp0_iter9_reg;
reg   [0:0] pixel_in_6_reg_1234_pp0_iter10_reg;
reg   [0:0] pixel_in_6_reg_1234_pp0_iter11_reg;
reg   [0:0] pixel_in_6_reg_1234_pp0_iter12_reg;
reg   [0:0] pixel_in_6_reg_1234_pp0_iter13_reg;
reg   [0:0] pixel_in_6_reg_1234_pp0_iter14_reg;
reg   [0:0] pixel_in_6_reg_1234_pp0_iter15_reg;
reg   [0:0] pixel_in_6_reg_1234_pp0_iter16_reg;
reg   [0:0] pixel_in_6_reg_1234_pp0_iter17_reg;
reg   [0:0] pixel_in_6_reg_1234_pp0_iter18_reg;
reg   [0:0] pixel_in_6_reg_1234_pp0_iter19_reg;
reg   [0:0] pixel_in_6_reg_1234_pp0_iter20_reg;
reg   [0:0] pixel_in_6_reg_1234_pp0_iter21_reg;
reg   [0:0] pixel_in_6_reg_1234_pp0_iter22_reg;
reg   [0:0] pixel_in_6_reg_1234_pp0_iter23_reg;
reg   [0:0] pixel_in_6_reg_1234_pp0_iter24_reg;
reg   [0:0] pixel_in_6_reg_1234_pp0_iter25_reg;
wire   [7:0] trunc_ln113_fu_446_p1;
reg   [7:0] trunc_ln113_reg_1239;
reg   [7:0] trunc_ln113_reg_1239_pp0_iter1_reg;
reg   [7:0] trunc_ln113_reg_1239_pp0_iter2_reg;
reg   [7:0] trunc_ln113_reg_1239_pp0_iter3_reg;
reg   [7:0] trunc_ln113_reg_1239_pp0_iter4_reg;
wire   [63:0] grp_fu_369_p1;
reg   [63:0] conv_i_reg_1254;
wire   [63:0] grp_fu_372_p1;
reg   [63:0] conv3_i_reg_1259;
wire   [63:0] grp_fu_354_p2;
reg   [63:0] mul_i_reg_1269;
wire   [63:0] grp_fu_359_p2;
reg   [63:0] mul4_i_reg_1274;
wire   [63:0] grp_fu_375_p1;
reg   [63:0] conv6_i_reg_1279;
wire   [63:0] grp_fu_346_p2;
reg   [63:0] add_i_reg_1284;
wire   [63:0] grp_fu_364_p2;
reg   [63:0] mul7_i_reg_1289;
wire   [63:0] grp_fu_350_p2;
reg   [63:0] add8_i_reg_1294;
reg   [10:0] line_buffer_0_addr_reg_1299;
wire   [0:0] addr_cmp45_fu_497_p2;
reg   [0:0] addr_cmp45_reg_1305;
reg   [10:0] line_buffer_1_addr_reg_1310;
wire   [0:0] addr_cmp39_fu_506_p2;
reg   [0:0] addr_cmp39_reg_1316;
reg   [10:0] line_buffer_l1_1_addr_reg_1321;
reg   [10:0] line_buffer_l1_1_addr_reg_1321_pp0_iter20_reg;
reg   [10:0] line_buffer_l1_1_addr_reg_1321_pp0_iter21_reg;
reg   [10:0] line_buffer_l1_1_addr_reg_1321_pp0_iter22_reg;
reg   [10:0] line_buffer_l1_1_addr_reg_1321_pp0_iter23_reg;
reg   [10:0] line_buffer_l1_1_addr_reg_1321_pp0_iter24_reg;
reg   [10:0] line_buffer_l1_1_addr_reg_1321_pp0_iter25_reg;
wire   [0:0] addr_cmp_fu_525_p2;
reg   [0:0] addr_cmp_reg_1327;
reg   [0:0] addr_cmp_reg_1327_pp0_iter20_reg;
reg   [0:0] addr_cmp_reg_1327_pp0_iter21_reg;
reg   [0:0] addr_cmp_reg_1327_pp0_iter22_reg;
reg   [0:0] addr_cmp_reg_1327_pp0_iter23_reg;
reg   [0:0] addr_cmp_reg_1327_pp0_iter24_reg;
reg   [0:0] addr_cmp_reg_1327_pp0_iter25_reg;
wire   [0:0] icmp_ln132_fu_546_p2;
reg   [0:0] icmp_ln132_reg_1332;
reg   [0:0] icmp_ln132_reg_1332_pp0_iter20_reg;
reg   [0:0] icmp_ln132_reg_1332_pp0_iter21_reg;
reg   [0:0] icmp_ln132_reg_1332_pp0_iter22_reg;
reg   [0:0] icmp_ln132_reg_1332_pp0_iter23_reg;
reg   [0:0] icmp_ln132_reg_1332_pp0_iter24_reg;
reg   [0:0] icmp_ln132_reg_1332_pp0_iter25_reg;
wire   [0:0] icmp_ln132_1_fu_552_p2;
reg   [0:0] icmp_ln132_1_reg_1337;
reg   [0:0] icmp_ln132_1_reg_1337_pp0_iter20_reg;
reg   [0:0] icmp_ln132_1_reg_1337_pp0_iter21_reg;
reg   [0:0] icmp_ln132_1_reg_1337_pp0_iter22_reg;
reg   [0:0] icmp_ln132_1_reg_1337_pp0_iter23_reg;
reg   [0:0] icmp_ln132_1_reg_1337_pp0_iter24_reg;
reg   [0:0] icmp_ln132_1_reg_1337_pp0_iter25_reg;
wire  signed [31:0] sub_ln57_2_fu_784_p2;
reg  signed [31:0] sub_ln57_2_reg_1342;
wire  signed [31:0] sub_ln57_5_fu_828_p2;
reg  signed [31:0] sub_ln57_5_reg_1348;
wire   [15:0] grp_sqrt_fixed_32_32_s_fu_338_ap_return;
reg   [15:0] p_Val2_s_reg_1359;
reg    ap_condition_exit_pp0_iter26_stage0;
wire   [10:0] line_buffer_0_address0;
reg    line_buffer_0_ce0;
wire   [31:0] line_buffer_0_q0;
reg    line_buffer_0_ce1;
reg    line_buffer_0_we1;
wire   [10:0] line_buffer_1_address0;
reg    line_buffer_1_ce0;
wire   [31:0] line_buffer_1_q0;
reg    line_buffer_1_ce1;
reg    line_buffer_1_we1;
reg    line_buffer_l1_1_ce0;
wire   [15:0] line_buffer_l1_1_q0;
reg    line_buffer_l1_1_ce1;
reg    line_buffer_l1_1_we1;
wire   [31:0] grp_sqrt_fixed_32_32_s_fu_338_x;
reg    grp_sqrt_fixed_32_32_s_fu_338_ap_ce;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call89;
wire    ap_block_state2_pp0_stage0_iter1_ignore_call89;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call89;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call89;
wire    ap_block_state5_pp0_stage0_iter4_ignore_call89;
wire    ap_block_state6_pp0_stage0_iter5_ignore_call89;
wire    ap_block_state7_pp0_stage0_iter6_ignore_call89;
wire    ap_block_state8_pp0_stage0_iter7_ignore_call89;
wire    ap_block_state9_pp0_stage0_iter8_ignore_call89;
wire    ap_block_state10_pp0_stage0_iter9_ignore_call89;
wire    ap_block_state11_pp0_stage0_iter10_ignore_call89;
wire    ap_block_state12_pp0_stage0_iter11_ignore_call89;
wire    ap_block_state13_pp0_stage0_iter12_ignore_call89;
wire    ap_block_state14_pp0_stage0_iter13_ignore_call89;
wire    ap_block_state15_pp0_stage0_iter14_ignore_call89;
wire    ap_block_state16_pp0_stage0_iter15_ignore_call89;
wire    ap_block_state17_pp0_stage0_iter16_ignore_call89;
wire    ap_block_state18_pp0_stage0_iter17_ignore_call89;
wire    ap_block_state19_pp0_stage0_iter18_ignore_call89;
wire    ap_block_state20_pp0_stage0_iter19_ignore_call89;
wire    ap_block_state21_pp0_stage0_iter20_ignore_call89;
wire    ap_block_state22_pp0_stage0_iter21_ignore_call89;
wire    ap_block_state23_pp0_stage0_iter22_ignore_call89;
wire    ap_block_state24_pp0_stage0_iter23_ignore_call89;
wire    ap_block_state25_pp0_stage0_iter24_ignore_call89;
wire    ap_block_state26_pp0_stage0_iter25_ignore_call89;
reg    ap_block_state27_pp0_stage0_iter26_ignore_call89;
reg    ap_block_state28_pp0_stage0_iter27_ignore_call89;
reg    ap_block_pp0_stage0_11001_ignoreCallOp217;
wire   [63:0] zext_ln116_fu_487_p1;
reg   [63:0] reuse_addr_reg42_fu_148;
wire    ap_loop_init;
reg   [31:0] reuse_reg41_fu_152;
wire   [31:0] reuse_select40_fu_607_p3;
reg   [63:0] reuse_addr_reg36_fu_156;
reg   [31:0] reuse_reg35_fu_160;
wire   [31:0] val_fu_729_p3;
reg   [63:0] reuse_addr_reg_fu_164;
reg   [15:0] reuse_reg_fu_168;
reg   [31:0] j_fu_172;
wire   [31:0] j_3_fu_1065_p3;
reg   [31:0] i_1_fu_176;
wire   [31:0] i_2_fu_564_p3;
reg   [31:0] empty_fu_180;
reg   [30:0] empty_67_fu_184;
reg   [31:0] empty_68_fu_188;
reg   [15:0] q_fu_192;
wire   [15:0] reuse_select_fu_932_p3;
reg   [15:0] r_fu_196;
reg   [31:0] empty_69_fu_200;
wire   [31:0] reuse_select46_fu_597_p3;
reg   [30:0] empty_70_fu_204;
wire   [30:0] trunc_ln65_fu_615_p1;
reg   [31:0] empty_71_fu_208;
reg   [15:0] q_1_fu_212;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] grp_fu_369_p0;
wire   [31:0] grp_fu_372_p0;
wire   [31:0] grp_fu_375_p0;
wire   [7:0] trunc_ln1_fu_450_p4;
wire   [7:0] trunc_ln14_1_fu_465_p4;
wire   [30:0] tmp_47_fu_536_p4;
wire   [31:0] i_fu_558_p2;
wire   [31:0] grp_fu_343_p1;
wire   [31:0] data_V_fu_619_p1;
wire   [22:0] tmp_52_fu_633_p1;
wire   [24:0] mantissa_fu_637_p4;
wire   [7:0] tmp_51_fu_623_p4;
wire   [8:0] zext_ln341_fu_651_p1;
wire   [8:0] add_ln341_fu_655_p2;
wire   [7:0] sub_ln1364_fu_669_p2;
wire   [0:0] isNeg_fu_661_p3;
wire  signed [8:0] sext_ln1364_fu_675_p1;
wire   [8:0] ush_fu_679_p3;
wire  signed [31:0] sext_ln1340_fu_687_p1;
wire   [78:0] zext_ln68_fu_647_p1;
wire   [78:0] zext_ln1340_fu_691_p1;
wire   [78:0] r_V_fu_695_p2;
wire   [0:0] tmp_46_fu_707_p3;
wire   [78:0] r_V_1_fu_701_p2;
wire   [31:0] zext_ln671_fu_715_p1;
wire   [31:0] tmp_s_fu_719_p4;
wire   [31:0] shl_ln57_fu_748_p2;
wire   [31:0] add_ln57_fu_754_p2;
wire   [31:0] add_ln57_1_fu_760_p2;
wire   [31:0] sub_ln57_fu_766_p2;
wire   [31:0] shl_ln57_1_fu_772_p2;
wire   [31:0] sub_ln57_1_fu_778_p2;
wire   [31:0] shl_ln57_2_fu_796_p3;
wire   [31:0] sub_ln57_3_fu_790_p2;
wire   [31:0] add_ln57_2_fu_804_p2;
wire   [31:0] shl_ln57_3_fu_810_p2;
wire   [31:0] sub_ln57_4_fu_816_p2;
wire   [31:0] add_ln57_3_fu_822_p2;
wire   [31:0] mul_ln122_1_fu_868_p2;
wire   [31:0] mul_ln122_fu_864_p2;
wire   [0:0] icmp_ln82_fu_891_p2;
wire   [0:0] icmp_ln82_1_fu_903_p2;
wire   [0:0] xor_ln82_fu_897_p2;
wire   [0:0] xor_ln82_1_fu_909_p2;
wire   [0:0] and_ln82_fu_915_p2;
wire   [30:0] tmp_48_fu_947_p4;
wire   [0:0] icmp_ln132_2_fu_957_p2;
wire   [0:0] icmp_ln132_3_fu_963_p2;
wire   [0:0] and_ln132_1_fu_969_p2;
wire   [15:0] supressed_fu_921_p3;
wire   [0:0] and_ln132_fu_943_p2;
wire   [15:0] select_ln132_fu_975_p3;
wire   [15:0] data_out_1_fu_983_p3;
wire   [0:0] data_out_2_fu_991_p2;
wire   [7:0] select_ln130_fu_997_p3;
wire   [15:0] tmp_49_fu_1013_p3;
wire   [15:0] select_ln141_fu_1005_p3;
wire   [0:0] select_ln141_1_fu_1027_p3;
wire   [15:0] or_ln141_fu_1021_p2;
wire   [16:0] pixel_out_data_V_fu_1035_p3;
wire  signed [23:0] sext_ln140_fu_1043_p1;
wire   [31:0] j_1_fu_1052_p2;
wire   [31:0] j_2_fu_1058_p3;
reg    grp_fu_343_ce;
reg    grp_fu_346_ce;
reg    grp_fu_350_ce;
reg    grp_fu_354_ce;
reg    grp_fu_359_ce;
reg    grp_fu_364_ce;
reg    grp_fu_369_ce;
reg    grp_fu_372_ce;
reg    grp_fu_375_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    regslice_both_in_V_data_V_U_apdone_blk;
wire   [31:0] in_r_TDATA_int_regslice;
wire    in_r_TVALID_int_regslice;
reg    in_r_TREADY_int_regslice;
wire    regslice_both_in_V_data_V_U_ack_in;
wire    regslice_both_in_V_keep_V_U_apdone_blk;
wire   [3:0] in_r_TKEEP_int_regslice;
wire    regslice_both_in_V_keep_V_U_vld_out;
wire    regslice_both_in_V_keep_V_U_ack_in;
wire    regslice_both_in_V_strb_V_U_apdone_blk;
wire   [3:0] in_r_TSTRB_int_regslice;
wire    regslice_both_in_V_strb_V_U_vld_out;
wire    regslice_both_in_V_strb_V_U_ack_in;
wire    regslice_both_in_V_user_V_U_apdone_blk;
wire   [0:0] in_r_TUSER_int_regslice;
wire    regslice_both_in_V_user_V_U_vld_out;
wire    regslice_both_in_V_user_V_U_ack_in;
wire    regslice_both_in_V_last_V_U_apdone_blk;
wire   [0:0] in_r_TLAST_int_regslice;
wire    regslice_both_in_V_last_V_U_vld_out;
wire    regslice_both_in_V_last_V_U_ack_in;
wire    regslice_both_in_V_id_V_U_apdone_blk;
wire   [0:0] in_r_TID_int_regslice;
wire    regslice_both_in_V_id_V_U_vld_out;
wire    regslice_both_in_V_id_V_U_ack_in;
wire    regslice_both_in_V_dest_V_U_apdone_blk;
wire   [0:0] in_r_TDEST_int_regslice;
wire    regslice_both_in_V_dest_V_U_vld_out;
wire    regslice_both_in_V_dest_V_U_ack_in;
wire   [31:0] out_r_TDATA_int_regslice;
reg    out_r_TVALID_int_regslice;
wire    out_r_TREADY_int_regslice;
wire    regslice_both_out_V_data_V_U_vld_out;
wire    regslice_both_out_V_keep_V_U_apdone_blk;
wire    regslice_both_out_V_keep_V_U_ack_in_dummy;
wire    regslice_both_out_V_keep_V_U_vld_out;
wire    regslice_both_out_V_strb_V_U_apdone_blk;
wire    regslice_both_out_V_strb_V_U_ack_in_dummy;
wire    regslice_both_out_V_strb_V_U_vld_out;
wire    regslice_both_out_V_user_V_U_apdone_blk;
wire    regslice_both_out_V_user_V_U_ack_in_dummy;
wire    regslice_both_out_V_user_V_U_vld_out;
wire    regslice_both_out_V_last_V_U_apdone_blk;
wire    regslice_both_out_V_last_V_U_ack_in_dummy;
wire    regslice_both_out_V_last_V_U_vld_out;
wire    regslice_both_out_V_id_V_U_apdone_blk;
wire    regslice_both_out_V_id_V_U_ack_in_dummy;
wire    regslice_both_out_V_id_V_U_vld_out;
wire    regslice_both_out_V_dest_V_U_apdone_blk;
wire    regslice_both_out_V_dest_V_U_ack_in_dummy;
wire    regslice_both_out_V_dest_V_U_vld_out;
reg    ap_condition_1080;
wire    ap_ce_reg;
wire   [31:0] ap_return;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_done_reg = 1'b0;
end

sobel_line_buffer_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
line_buffer_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(line_buffer_0_address0),
    .ce0(line_buffer_0_ce0),
    .q0(line_buffer_0_q0),
    .address1(line_buffer_0_addr_reg_1299),
    .ce1(line_buffer_0_ce1),
    .we1(line_buffer_0_we1),
    .d1(reuse_select40_fu_607_p3)
);

sobel_line_buffer_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
line_buffer_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(line_buffer_1_address0),
    .ce0(line_buffer_1_ce0),
    .q0(line_buffer_1_q0),
    .address1(line_buffer_1_addr_reg_1310),
    .ce1(line_buffer_1_ce1),
    .we1(line_buffer_1_we1),
    .d1(val_fu_729_p3)
);

sobel_line_buffer_l1_1 #(
    .DataWidth( 16 ),
    .AddressRange( 1280 ),
    .AddressWidth( 11 ))
line_buffer_l1_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(line_buffer_l1_1_addr_reg_1321_pp0_iter24_reg),
    .ce0(line_buffer_l1_1_ce0),
    .q0(line_buffer_l1_1_q0),
    .address1(line_buffer_l1_1_addr_reg_1321_pp0_iter25_reg),
    .ce1(line_buffer_l1_1_ce1),
    .we1(line_buffer_l1_1_we1),
    .d1(p_Val2_s_reg_1359)
);

sobel_sqrt_fixed_32_32_s grp_sqrt_fixed_32_32_s_fu_338(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .x(grp_sqrt_fixed_32_32_s_fu_338_x),
    .ap_return(grp_sqrt_fixed_32_32_s_fu_338_ap_return),
    .ap_ce(grp_sqrt_fixed_32_32_s_fu_338_ap_ce)
);

sobel_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .ap_return(32'd0)
);

sobel_fptrunc_64ns_32_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
fptrunc_64ns_32_2_no_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(add8_i_reg_1294),
    .ce(grp_fu_343_ce),
    .dout(grp_fu_343_p1)
);

sobel_dadd_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_5_full_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(mul_i_reg_1269),
    .din1(mul4_i_reg_1274),
    .ce(grp_fu_346_ce),
    .dout(grp_fu_346_p2)
);

sobel_dadd_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_5_full_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(add_i_reg_1284),
    .din1(mul7_i_reg_1289),
    .ce(grp_fu_350_ce),
    .dout(grp_fu_350_p2)
);

sobel_dmul_64ns_64ns_64_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_5_max_dsp_1_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(conv_i_reg_1254),
    .din1(64'd4599056123632390085),
    .ce(grp_fu_354_ce),
    .dout(grp_fu_354_p2)
);

sobel_dmul_64ns_64ns_64_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_5_max_dsp_1_U6(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(conv3_i_reg_1259),
    .din1(64'd4603462445507809378),
    .ce(grp_fu_359_ce),
    .dout(grp_fu_359_p2)
);

sobel_dmul_64ns_64ns_64_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_5_max_dsp_1_U7(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(conv6_i_reg_1279),
    .din1(64'd4594356167061266235),
    .ce(grp_fu_364_ce),
    .dout(grp_fu_364_p2)
);

sobel_uitodp_32ns_64_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
uitodp_32ns_64_4_no_dsp_1_U8(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_369_p0),
    .ce(grp_fu_369_ce),
    .dout(grp_fu_369_p1)
);

sobel_uitodp_32ns_64_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
uitodp_32ns_64_4_no_dsp_1_U9(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_372_p0),
    .ce(grp_fu_372_ce),
    .dout(grp_fu_372_p1)
);

sobel_uitodp_32ns_64_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
uitodp_32ns_64_4_no_dsp_1_U10(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_375_p0),
    .ce(grp_fu_375_ce),
    .dout(grp_fu_375_p1)
);

sobel_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U11(
    .din0(sub_ln57_2_reg_1342),
    .din1(sub_ln57_2_reg_1342),
    .dout(mul_ln122_fu_864_p2)
);

sobel_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U12(
    .din0(sub_ln57_5_reg_1348),
    .din1(sub_ln57_5_reg_1348),
    .dout(mul_ln122_1_fu_868_p2)
);

sobel_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(1'b1)
);

sobel_regslice_both #(
    .DataWidth( 32 ))
regslice_both_in_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_r_TDATA),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_V_data_V_U_ack_in),
    .data_out(in_r_TDATA_int_regslice),
    .vld_out(in_r_TVALID_int_regslice),
    .ack_out(in_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_V_data_V_U_apdone_blk)
);

sobel_regslice_both #(
    .DataWidth( 4 ))
regslice_both_in_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_r_TKEEP),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_V_keep_V_U_ack_in),
    .data_out(in_r_TKEEP_int_regslice),
    .vld_out(regslice_both_in_V_keep_V_U_vld_out),
    .ack_out(in_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_V_keep_V_U_apdone_blk)
);

sobel_regslice_both #(
    .DataWidth( 4 ))
regslice_both_in_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_r_TSTRB),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_V_strb_V_U_ack_in),
    .data_out(in_r_TSTRB_int_regslice),
    .vld_out(regslice_both_in_V_strb_V_U_vld_out),
    .ack_out(in_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_V_strb_V_U_apdone_blk)
);

sobel_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_r_TUSER),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_V_user_V_U_ack_in),
    .data_out(in_r_TUSER_int_regslice),
    .vld_out(regslice_both_in_V_user_V_U_vld_out),
    .ack_out(in_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_V_user_V_U_apdone_blk)
);

sobel_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_r_TLAST),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_V_last_V_U_ack_in),
    .data_out(in_r_TLAST_int_regslice),
    .vld_out(regslice_both_in_V_last_V_U_vld_out),
    .ack_out(in_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_V_last_V_U_apdone_blk)
);

sobel_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_r_TID),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_V_id_V_U_ack_in),
    .data_out(in_r_TID_int_regslice),
    .vld_out(regslice_both_in_V_id_V_U_vld_out),
    .ack_out(in_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_V_id_V_U_apdone_blk)
);

sobel_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_r_TDEST),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_V_dest_V_U_ack_in),
    .data_out(in_r_TDEST_int_regslice),
    .vld_out(regslice_both_in_V_dest_V_U_vld_out),
    .ack_out(in_r_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_V_dest_V_U_apdone_blk)
);

sobel_regslice_both #(
    .DataWidth( 32 ))
regslice_both_out_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_r_TDATA_int_regslice),
    .vld_in(out_r_TVALID_int_regslice),
    .ack_in(out_r_TREADY_int_regslice),
    .data_out(out_r_TDATA),
    .vld_out(regslice_both_out_V_data_V_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_V_data_V_U_apdone_blk)
);

sobel_regslice_both #(
    .DataWidth( 4 ))
regslice_both_out_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(pixel_in_1_reg_1206_pp0_iter25_reg),
    .vld_in(out_r_TVALID_int_regslice),
    .ack_in(regslice_both_out_V_keep_V_U_ack_in_dummy),
    .data_out(out_r_TKEEP),
    .vld_out(regslice_both_out_V_keep_V_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_V_keep_V_U_apdone_blk)
);

sobel_regslice_both #(
    .DataWidth( 4 ))
regslice_both_out_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(pixel_in_2_reg_1211_pp0_iter25_reg),
    .vld_in(out_r_TVALID_int_regslice),
    .ack_in(regslice_both_out_V_strb_V_U_ack_in_dummy),
    .data_out(out_r_TSTRB),
    .vld_out(regslice_both_out_V_strb_V_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_V_strb_V_U_apdone_blk)
);

sobel_regslice_both #(
    .DataWidth( 1 ))
regslice_both_out_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(pixel_in_3_reg_1216_pp0_iter25_reg),
    .vld_in(out_r_TVALID_int_regslice),
    .ack_in(regslice_both_out_V_user_V_U_ack_in_dummy),
    .data_out(out_r_TUSER),
    .vld_out(regslice_both_out_V_user_V_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_V_user_V_U_apdone_blk)
);

sobel_regslice_both #(
    .DataWidth( 1 ))
regslice_both_out_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(pixel_in_4_reg_1223_pp0_iter25_reg),
    .vld_in(out_r_TVALID_int_regslice),
    .ack_in(regslice_both_out_V_last_V_U_ack_in_dummy),
    .data_out(out_r_TLAST),
    .vld_out(regslice_both_out_V_last_V_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_V_last_V_U_apdone_blk)
);

sobel_regslice_both #(
    .DataWidth( 1 ))
regslice_both_out_V_id_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(pixel_in_5_reg_1229_pp0_iter25_reg),
    .vld_in(out_r_TVALID_int_regslice),
    .ack_in(regslice_both_out_V_id_V_U_ack_in_dummy),
    .data_out(out_r_TID),
    .vld_out(regslice_both_out_V_id_V_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_V_id_V_U_apdone_blk)
);

sobel_regslice_both #(
    .DataWidth( 1 ))
regslice_both_out_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(pixel_in_6_reg_1234_pp0_iter25_reg),
    .vld_in(out_r_TVALID_int_regslice),
    .ack_in(regslice_both_out_V_dest_V_U_ack_in_dummy),
    .data_out(out_r_TDEST),
    .vld_out(regslice_both_out_V_dest_V_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_V_dest_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter26_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter26_stage0)) begin
            ap_enable_reg_pp0_iter27 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if ((1'b1 == ap_condition_1080)) begin
            i_1_fu_176 <= 32'd0;
        end else if (((ap_enable_reg_pp0_iter19 == 1'b1) & (tmp_reg_1202_pp0_iter18_reg == 1'd1))) begin
            i_1_fu_176 <= i_2_fu_564_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if ((1'b1 == ap_condition_1080)) begin
            j_fu_172 <= 32'd0;
        end else if (((ap_enable_reg_pp0_iter26 == 1'b1) & (tmp_reg_1202_pp0_iter25_reg == 1'd1))) begin
            j_fu_172 <= j_3_fu_1065_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if ((1'b1 == ap_condition_1080)) begin
            reuse_addr_reg36_fu_156 <= 64'd18446744073709551615;
        end else if (((ap_enable_reg_pp0_iter19 == 1'b1) & (tmp_reg_1202_pp0_iter18_reg == 1'd1))) begin
            reuse_addr_reg36_fu_156 <= zext_ln116_fu_487_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if ((1'b1 == ap_condition_1080)) begin
            reuse_addr_reg42_fu_148 <= 64'd18446744073709551615;
        end else if (((ap_enable_reg_pp0_iter19 == 1'b1) & (tmp_reg_1202_pp0_iter18_reg == 1'd1))) begin
            reuse_addr_reg42_fu_148 <= zext_ln116_fu_487_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if ((1'b1 == ap_condition_1080)) begin
            reuse_addr_reg_fu_164 <= 64'd18446744073709551615;
        end else if (((ap_enable_reg_pp0_iter19 == 1'b1) & (tmp_reg_1202_pp0_iter18_reg == 1'd1))) begin
            reuse_addr_reg_fu_164 <= zext_ln116_fu_487_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if ((1'b1 == ap_condition_1080)) begin
            reuse_reg35_fu_160 <= 32'd0;
        end else if (((ap_enable_reg_pp0_iter20 == 1'b1) & (tmp_reg_1202_pp0_iter19_reg == 1'd1))) begin
            reuse_reg35_fu_160 <= val_fu_729_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if ((1'b1 == ap_condition_1080)) begin
            reuse_reg41_fu_152 <= 32'd0;
        end else if (((ap_enable_reg_pp0_iter20 == 1'b1) & (tmp_reg_1202_pp0_iter19_reg == 1'd1))) begin
            reuse_reg41_fu_152 <= reuse_select40_fu_607_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if ((1'b1 == ap_condition_1080)) begin
            reuse_reg_fu_168 <= 16'd0;
        end else if (((ap_enable_reg_pp0_iter26 == 1'b1) & (tmp_reg_1202_pp0_iter25_reg == 1'd1))) begin
            reuse_reg_fu_168 <= p_Val2_s_reg_1359;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_1202_pp0_iter17_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add8_i_reg_1294 <= grp_fu_350_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_1202_pp0_iter12_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_i_reg_1284 <= grp_fu_346_p2;
        mul7_i_reg_1289 <= grp_fu_364_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_1202_pp0_iter18_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        addr_cmp39_reg_1316 <= addr_cmp39_fu_506_p2;
        addr_cmp45_reg_1305 <= addr_cmp45_fu_497_p2;
        addr_cmp_reg_1327 <= addr_cmp_fu_525_p2;
        icmp_ln132_1_reg_1337 <= icmp_ln132_1_fu_552_p2;
        icmp_ln132_reg_1332 <= icmp_ln132_fu_546_p2;
        line_buffer_0_addr_reg_1299 <= zext_ln116_fu_487_p1;
        line_buffer_1_addr_reg_1310 <= zext_ln116_fu_487_p1;
        line_buffer_l1_1_addr_reg_1321 <= zext_ln116_fu_487_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        addr_cmp_reg_1327_pp0_iter20_reg <= addr_cmp_reg_1327;
        addr_cmp_reg_1327_pp0_iter21_reg <= addr_cmp_reg_1327_pp0_iter20_reg;
        addr_cmp_reg_1327_pp0_iter22_reg <= addr_cmp_reg_1327_pp0_iter21_reg;
        addr_cmp_reg_1327_pp0_iter23_reg <= addr_cmp_reg_1327_pp0_iter22_reg;
        addr_cmp_reg_1327_pp0_iter24_reg <= addr_cmp_reg_1327_pp0_iter23_reg;
        addr_cmp_reg_1327_pp0_iter25_reg <= addr_cmp_reg_1327_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        icmp_ln132_1_reg_1337_pp0_iter20_reg <= icmp_ln132_1_reg_1337;
        icmp_ln132_1_reg_1337_pp0_iter21_reg <= icmp_ln132_1_reg_1337_pp0_iter20_reg;
        icmp_ln132_1_reg_1337_pp0_iter22_reg <= icmp_ln132_1_reg_1337_pp0_iter21_reg;
        icmp_ln132_1_reg_1337_pp0_iter23_reg <= icmp_ln132_1_reg_1337_pp0_iter22_reg;
        icmp_ln132_1_reg_1337_pp0_iter24_reg <= icmp_ln132_1_reg_1337_pp0_iter23_reg;
        icmp_ln132_1_reg_1337_pp0_iter25_reg <= icmp_ln132_1_reg_1337_pp0_iter24_reg;
        icmp_ln132_reg_1332_pp0_iter20_reg <= icmp_ln132_reg_1332;
        icmp_ln132_reg_1332_pp0_iter21_reg <= icmp_ln132_reg_1332_pp0_iter20_reg;
        icmp_ln132_reg_1332_pp0_iter22_reg <= icmp_ln132_reg_1332_pp0_iter21_reg;
        icmp_ln132_reg_1332_pp0_iter23_reg <= icmp_ln132_reg_1332_pp0_iter22_reg;
        icmp_ln132_reg_1332_pp0_iter24_reg <= icmp_ln132_reg_1332_pp0_iter23_reg;
        icmp_ln132_reg_1332_pp0_iter25_reg <= icmp_ln132_reg_1332_pp0_iter24_reg;
        line_buffer_l1_1_addr_reg_1321_pp0_iter20_reg <= line_buffer_l1_1_addr_reg_1321;
        line_buffer_l1_1_addr_reg_1321_pp0_iter21_reg <= line_buffer_l1_1_addr_reg_1321_pp0_iter20_reg;
        line_buffer_l1_1_addr_reg_1321_pp0_iter22_reg <= line_buffer_l1_1_addr_reg_1321_pp0_iter21_reg;
        line_buffer_l1_1_addr_reg_1321_pp0_iter23_reg <= line_buffer_l1_1_addr_reg_1321_pp0_iter22_reg;
        line_buffer_l1_1_addr_reg_1321_pp0_iter24_reg <= line_buffer_l1_1_addr_reg_1321_pp0_iter23_reg;
        line_buffer_l1_1_addr_reg_1321_pp0_iter25_reg <= line_buffer_l1_1_addr_reg_1321_pp0_iter24_reg;
        pixel_in_1_reg_1206_pp0_iter10_reg <= pixel_in_1_reg_1206_pp0_iter9_reg;
        pixel_in_1_reg_1206_pp0_iter11_reg <= pixel_in_1_reg_1206_pp0_iter10_reg;
        pixel_in_1_reg_1206_pp0_iter12_reg <= pixel_in_1_reg_1206_pp0_iter11_reg;
        pixel_in_1_reg_1206_pp0_iter13_reg <= pixel_in_1_reg_1206_pp0_iter12_reg;
        pixel_in_1_reg_1206_pp0_iter14_reg <= pixel_in_1_reg_1206_pp0_iter13_reg;
        pixel_in_1_reg_1206_pp0_iter15_reg <= pixel_in_1_reg_1206_pp0_iter14_reg;
        pixel_in_1_reg_1206_pp0_iter16_reg <= pixel_in_1_reg_1206_pp0_iter15_reg;
        pixel_in_1_reg_1206_pp0_iter17_reg <= pixel_in_1_reg_1206_pp0_iter16_reg;
        pixel_in_1_reg_1206_pp0_iter18_reg <= pixel_in_1_reg_1206_pp0_iter17_reg;
        pixel_in_1_reg_1206_pp0_iter19_reg <= pixel_in_1_reg_1206_pp0_iter18_reg;
        pixel_in_1_reg_1206_pp0_iter20_reg <= pixel_in_1_reg_1206_pp0_iter19_reg;
        pixel_in_1_reg_1206_pp0_iter21_reg <= pixel_in_1_reg_1206_pp0_iter20_reg;
        pixel_in_1_reg_1206_pp0_iter22_reg <= pixel_in_1_reg_1206_pp0_iter21_reg;
        pixel_in_1_reg_1206_pp0_iter23_reg <= pixel_in_1_reg_1206_pp0_iter22_reg;
        pixel_in_1_reg_1206_pp0_iter24_reg <= pixel_in_1_reg_1206_pp0_iter23_reg;
        pixel_in_1_reg_1206_pp0_iter25_reg <= pixel_in_1_reg_1206_pp0_iter24_reg;
        pixel_in_1_reg_1206_pp0_iter2_reg <= pixel_in_1_reg_1206_pp0_iter1_reg;
        pixel_in_1_reg_1206_pp0_iter3_reg <= pixel_in_1_reg_1206_pp0_iter2_reg;
        pixel_in_1_reg_1206_pp0_iter4_reg <= pixel_in_1_reg_1206_pp0_iter3_reg;
        pixel_in_1_reg_1206_pp0_iter5_reg <= pixel_in_1_reg_1206_pp0_iter4_reg;
        pixel_in_1_reg_1206_pp0_iter6_reg <= pixel_in_1_reg_1206_pp0_iter5_reg;
        pixel_in_1_reg_1206_pp0_iter7_reg <= pixel_in_1_reg_1206_pp0_iter6_reg;
        pixel_in_1_reg_1206_pp0_iter8_reg <= pixel_in_1_reg_1206_pp0_iter7_reg;
        pixel_in_1_reg_1206_pp0_iter9_reg <= pixel_in_1_reg_1206_pp0_iter8_reg;
        pixel_in_2_reg_1211_pp0_iter10_reg <= pixel_in_2_reg_1211_pp0_iter9_reg;
        pixel_in_2_reg_1211_pp0_iter11_reg <= pixel_in_2_reg_1211_pp0_iter10_reg;
        pixel_in_2_reg_1211_pp0_iter12_reg <= pixel_in_2_reg_1211_pp0_iter11_reg;
        pixel_in_2_reg_1211_pp0_iter13_reg <= pixel_in_2_reg_1211_pp0_iter12_reg;
        pixel_in_2_reg_1211_pp0_iter14_reg <= pixel_in_2_reg_1211_pp0_iter13_reg;
        pixel_in_2_reg_1211_pp0_iter15_reg <= pixel_in_2_reg_1211_pp0_iter14_reg;
        pixel_in_2_reg_1211_pp0_iter16_reg <= pixel_in_2_reg_1211_pp0_iter15_reg;
        pixel_in_2_reg_1211_pp0_iter17_reg <= pixel_in_2_reg_1211_pp0_iter16_reg;
        pixel_in_2_reg_1211_pp0_iter18_reg <= pixel_in_2_reg_1211_pp0_iter17_reg;
        pixel_in_2_reg_1211_pp0_iter19_reg <= pixel_in_2_reg_1211_pp0_iter18_reg;
        pixel_in_2_reg_1211_pp0_iter20_reg <= pixel_in_2_reg_1211_pp0_iter19_reg;
        pixel_in_2_reg_1211_pp0_iter21_reg <= pixel_in_2_reg_1211_pp0_iter20_reg;
        pixel_in_2_reg_1211_pp0_iter22_reg <= pixel_in_2_reg_1211_pp0_iter21_reg;
        pixel_in_2_reg_1211_pp0_iter23_reg <= pixel_in_2_reg_1211_pp0_iter22_reg;
        pixel_in_2_reg_1211_pp0_iter24_reg <= pixel_in_2_reg_1211_pp0_iter23_reg;
        pixel_in_2_reg_1211_pp0_iter25_reg <= pixel_in_2_reg_1211_pp0_iter24_reg;
        pixel_in_2_reg_1211_pp0_iter2_reg <= pixel_in_2_reg_1211_pp0_iter1_reg;
        pixel_in_2_reg_1211_pp0_iter3_reg <= pixel_in_2_reg_1211_pp0_iter2_reg;
        pixel_in_2_reg_1211_pp0_iter4_reg <= pixel_in_2_reg_1211_pp0_iter3_reg;
        pixel_in_2_reg_1211_pp0_iter5_reg <= pixel_in_2_reg_1211_pp0_iter4_reg;
        pixel_in_2_reg_1211_pp0_iter6_reg <= pixel_in_2_reg_1211_pp0_iter5_reg;
        pixel_in_2_reg_1211_pp0_iter7_reg <= pixel_in_2_reg_1211_pp0_iter6_reg;
        pixel_in_2_reg_1211_pp0_iter8_reg <= pixel_in_2_reg_1211_pp0_iter7_reg;
        pixel_in_2_reg_1211_pp0_iter9_reg <= pixel_in_2_reg_1211_pp0_iter8_reg;
        pixel_in_3_reg_1216_pp0_iter10_reg <= pixel_in_3_reg_1216_pp0_iter9_reg;
        pixel_in_3_reg_1216_pp0_iter11_reg <= pixel_in_3_reg_1216_pp0_iter10_reg;
        pixel_in_3_reg_1216_pp0_iter12_reg <= pixel_in_3_reg_1216_pp0_iter11_reg;
        pixel_in_3_reg_1216_pp0_iter13_reg <= pixel_in_3_reg_1216_pp0_iter12_reg;
        pixel_in_3_reg_1216_pp0_iter14_reg <= pixel_in_3_reg_1216_pp0_iter13_reg;
        pixel_in_3_reg_1216_pp0_iter15_reg <= pixel_in_3_reg_1216_pp0_iter14_reg;
        pixel_in_3_reg_1216_pp0_iter16_reg <= pixel_in_3_reg_1216_pp0_iter15_reg;
        pixel_in_3_reg_1216_pp0_iter17_reg <= pixel_in_3_reg_1216_pp0_iter16_reg;
        pixel_in_3_reg_1216_pp0_iter18_reg <= pixel_in_3_reg_1216_pp0_iter17_reg;
        pixel_in_3_reg_1216_pp0_iter19_reg <= pixel_in_3_reg_1216_pp0_iter18_reg;
        pixel_in_3_reg_1216_pp0_iter20_reg <= pixel_in_3_reg_1216_pp0_iter19_reg;
        pixel_in_3_reg_1216_pp0_iter21_reg <= pixel_in_3_reg_1216_pp0_iter20_reg;
        pixel_in_3_reg_1216_pp0_iter22_reg <= pixel_in_3_reg_1216_pp0_iter21_reg;
        pixel_in_3_reg_1216_pp0_iter23_reg <= pixel_in_3_reg_1216_pp0_iter22_reg;
        pixel_in_3_reg_1216_pp0_iter24_reg <= pixel_in_3_reg_1216_pp0_iter23_reg;
        pixel_in_3_reg_1216_pp0_iter25_reg <= pixel_in_3_reg_1216_pp0_iter24_reg;
        pixel_in_3_reg_1216_pp0_iter2_reg <= pixel_in_3_reg_1216_pp0_iter1_reg;
        pixel_in_3_reg_1216_pp0_iter3_reg <= pixel_in_3_reg_1216_pp0_iter2_reg;
        pixel_in_3_reg_1216_pp0_iter4_reg <= pixel_in_3_reg_1216_pp0_iter3_reg;
        pixel_in_3_reg_1216_pp0_iter5_reg <= pixel_in_3_reg_1216_pp0_iter4_reg;
        pixel_in_3_reg_1216_pp0_iter6_reg <= pixel_in_3_reg_1216_pp0_iter5_reg;
        pixel_in_3_reg_1216_pp0_iter7_reg <= pixel_in_3_reg_1216_pp0_iter6_reg;
        pixel_in_3_reg_1216_pp0_iter8_reg <= pixel_in_3_reg_1216_pp0_iter7_reg;
        pixel_in_3_reg_1216_pp0_iter9_reg <= pixel_in_3_reg_1216_pp0_iter8_reg;
        pixel_in_4_reg_1223_pp0_iter10_reg <= pixel_in_4_reg_1223_pp0_iter9_reg;
        pixel_in_4_reg_1223_pp0_iter11_reg <= pixel_in_4_reg_1223_pp0_iter10_reg;
        pixel_in_4_reg_1223_pp0_iter12_reg <= pixel_in_4_reg_1223_pp0_iter11_reg;
        pixel_in_4_reg_1223_pp0_iter13_reg <= pixel_in_4_reg_1223_pp0_iter12_reg;
        pixel_in_4_reg_1223_pp0_iter14_reg <= pixel_in_4_reg_1223_pp0_iter13_reg;
        pixel_in_4_reg_1223_pp0_iter15_reg <= pixel_in_4_reg_1223_pp0_iter14_reg;
        pixel_in_4_reg_1223_pp0_iter16_reg <= pixel_in_4_reg_1223_pp0_iter15_reg;
        pixel_in_4_reg_1223_pp0_iter17_reg <= pixel_in_4_reg_1223_pp0_iter16_reg;
        pixel_in_4_reg_1223_pp0_iter18_reg <= pixel_in_4_reg_1223_pp0_iter17_reg;
        pixel_in_4_reg_1223_pp0_iter19_reg <= pixel_in_4_reg_1223_pp0_iter18_reg;
        pixel_in_4_reg_1223_pp0_iter20_reg <= pixel_in_4_reg_1223_pp0_iter19_reg;
        pixel_in_4_reg_1223_pp0_iter21_reg <= pixel_in_4_reg_1223_pp0_iter20_reg;
        pixel_in_4_reg_1223_pp0_iter22_reg <= pixel_in_4_reg_1223_pp0_iter21_reg;
        pixel_in_4_reg_1223_pp0_iter23_reg <= pixel_in_4_reg_1223_pp0_iter22_reg;
        pixel_in_4_reg_1223_pp0_iter24_reg <= pixel_in_4_reg_1223_pp0_iter23_reg;
        pixel_in_4_reg_1223_pp0_iter25_reg <= pixel_in_4_reg_1223_pp0_iter24_reg;
        pixel_in_4_reg_1223_pp0_iter2_reg <= pixel_in_4_reg_1223_pp0_iter1_reg;
        pixel_in_4_reg_1223_pp0_iter3_reg <= pixel_in_4_reg_1223_pp0_iter2_reg;
        pixel_in_4_reg_1223_pp0_iter4_reg <= pixel_in_4_reg_1223_pp0_iter3_reg;
        pixel_in_4_reg_1223_pp0_iter5_reg <= pixel_in_4_reg_1223_pp0_iter4_reg;
        pixel_in_4_reg_1223_pp0_iter6_reg <= pixel_in_4_reg_1223_pp0_iter5_reg;
        pixel_in_4_reg_1223_pp0_iter7_reg <= pixel_in_4_reg_1223_pp0_iter6_reg;
        pixel_in_4_reg_1223_pp0_iter8_reg <= pixel_in_4_reg_1223_pp0_iter7_reg;
        pixel_in_4_reg_1223_pp0_iter9_reg <= pixel_in_4_reg_1223_pp0_iter8_reg;
        pixel_in_5_reg_1229_pp0_iter10_reg <= pixel_in_5_reg_1229_pp0_iter9_reg;
        pixel_in_5_reg_1229_pp0_iter11_reg <= pixel_in_5_reg_1229_pp0_iter10_reg;
        pixel_in_5_reg_1229_pp0_iter12_reg <= pixel_in_5_reg_1229_pp0_iter11_reg;
        pixel_in_5_reg_1229_pp0_iter13_reg <= pixel_in_5_reg_1229_pp0_iter12_reg;
        pixel_in_5_reg_1229_pp0_iter14_reg <= pixel_in_5_reg_1229_pp0_iter13_reg;
        pixel_in_5_reg_1229_pp0_iter15_reg <= pixel_in_5_reg_1229_pp0_iter14_reg;
        pixel_in_5_reg_1229_pp0_iter16_reg <= pixel_in_5_reg_1229_pp0_iter15_reg;
        pixel_in_5_reg_1229_pp0_iter17_reg <= pixel_in_5_reg_1229_pp0_iter16_reg;
        pixel_in_5_reg_1229_pp0_iter18_reg <= pixel_in_5_reg_1229_pp0_iter17_reg;
        pixel_in_5_reg_1229_pp0_iter19_reg <= pixel_in_5_reg_1229_pp0_iter18_reg;
        pixel_in_5_reg_1229_pp0_iter20_reg <= pixel_in_5_reg_1229_pp0_iter19_reg;
        pixel_in_5_reg_1229_pp0_iter21_reg <= pixel_in_5_reg_1229_pp0_iter20_reg;
        pixel_in_5_reg_1229_pp0_iter22_reg <= pixel_in_5_reg_1229_pp0_iter21_reg;
        pixel_in_5_reg_1229_pp0_iter23_reg <= pixel_in_5_reg_1229_pp0_iter22_reg;
        pixel_in_5_reg_1229_pp0_iter24_reg <= pixel_in_5_reg_1229_pp0_iter23_reg;
        pixel_in_5_reg_1229_pp0_iter25_reg <= pixel_in_5_reg_1229_pp0_iter24_reg;
        pixel_in_5_reg_1229_pp0_iter2_reg <= pixel_in_5_reg_1229_pp0_iter1_reg;
        pixel_in_5_reg_1229_pp0_iter3_reg <= pixel_in_5_reg_1229_pp0_iter2_reg;
        pixel_in_5_reg_1229_pp0_iter4_reg <= pixel_in_5_reg_1229_pp0_iter3_reg;
        pixel_in_5_reg_1229_pp0_iter5_reg <= pixel_in_5_reg_1229_pp0_iter4_reg;
        pixel_in_5_reg_1229_pp0_iter6_reg <= pixel_in_5_reg_1229_pp0_iter5_reg;
        pixel_in_5_reg_1229_pp0_iter7_reg <= pixel_in_5_reg_1229_pp0_iter6_reg;
        pixel_in_5_reg_1229_pp0_iter8_reg <= pixel_in_5_reg_1229_pp0_iter7_reg;
        pixel_in_5_reg_1229_pp0_iter9_reg <= pixel_in_5_reg_1229_pp0_iter8_reg;
        pixel_in_6_reg_1234_pp0_iter10_reg <= pixel_in_6_reg_1234_pp0_iter9_reg;
        pixel_in_6_reg_1234_pp0_iter11_reg <= pixel_in_6_reg_1234_pp0_iter10_reg;
        pixel_in_6_reg_1234_pp0_iter12_reg <= pixel_in_6_reg_1234_pp0_iter11_reg;
        pixel_in_6_reg_1234_pp0_iter13_reg <= pixel_in_6_reg_1234_pp0_iter12_reg;
        pixel_in_6_reg_1234_pp0_iter14_reg <= pixel_in_6_reg_1234_pp0_iter13_reg;
        pixel_in_6_reg_1234_pp0_iter15_reg <= pixel_in_6_reg_1234_pp0_iter14_reg;
        pixel_in_6_reg_1234_pp0_iter16_reg <= pixel_in_6_reg_1234_pp0_iter15_reg;
        pixel_in_6_reg_1234_pp0_iter17_reg <= pixel_in_6_reg_1234_pp0_iter16_reg;
        pixel_in_6_reg_1234_pp0_iter18_reg <= pixel_in_6_reg_1234_pp0_iter17_reg;
        pixel_in_6_reg_1234_pp0_iter19_reg <= pixel_in_6_reg_1234_pp0_iter18_reg;
        pixel_in_6_reg_1234_pp0_iter20_reg <= pixel_in_6_reg_1234_pp0_iter19_reg;
        pixel_in_6_reg_1234_pp0_iter21_reg <= pixel_in_6_reg_1234_pp0_iter20_reg;
        pixel_in_6_reg_1234_pp0_iter22_reg <= pixel_in_6_reg_1234_pp0_iter21_reg;
        pixel_in_6_reg_1234_pp0_iter23_reg <= pixel_in_6_reg_1234_pp0_iter22_reg;
        pixel_in_6_reg_1234_pp0_iter24_reg <= pixel_in_6_reg_1234_pp0_iter23_reg;
        pixel_in_6_reg_1234_pp0_iter25_reg <= pixel_in_6_reg_1234_pp0_iter24_reg;
        pixel_in_6_reg_1234_pp0_iter2_reg <= pixel_in_6_reg_1234_pp0_iter1_reg;
        pixel_in_6_reg_1234_pp0_iter3_reg <= pixel_in_6_reg_1234_pp0_iter2_reg;
        pixel_in_6_reg_1234_pp0_iter4_reg <= pixel_in_6_reg_1234_pp0_iter3_reg;
        pixel_in_6_reg_1234_pp0_iter5_reg <= pixel_in_6_reg_1234_pp0_iter4_reg;
        pixel_in_6_reg_1234_pp0_iter6_reg <= pixel_in_6_reg_1234_pp0_iter5_reg;
        pixel_in_6_reg_1234_pp0_iter7_reg <= pixel_in_6_reg_1234_pp0_iter6_reg;
        pixel_in_6_reg_1234_pp0_iter8_reg <= pixel_in_6_reg_1234_pp0_iter7_reg;
        pixel_in_6_reg_1234_pp0_iter9_reg <= pixel_in_6_reg_1234_pp0_iter8_reg;
        tmp_reg_1202_pp0_iter10_reg <= tmp_reg_1202_pp0_iter9_reg;
        tmp_reg_1202_pp0_iter11_reg <= tmp_reg_1202_pp0_iter10_reg;
        tmp_reg_1202_pp0_iter12_reg <= tmp_reg_1202_pp0_iter11_reg;
        tmp_reg_1202_pp0_iter13_reg <= tmp_reg_1202_pp0_iter12_reg;
        tmp_reg_1202_pp0_iter14_reg <= tmp_reg_1202_pp0_iter13_reg;
        tmp_reg_1202_pp0_iter15_reg <= tmp_reg_1202_pp0_iter14_reg;
        tmp_reg_1202_pp0_iter16_reg <= tmp_reg_1202_pp0_iter15_reg;
        tmp_reg_1202_pp0_iter17_reg <= tmp_reg_1202_pp0_iter16_reg;
        tmp_reg_1202_pp0_iter18_reg <= tmp_reg_1202_pp0_iter17_reg;
        tmp_reg_1202_pp0_iter19_reg <= tmp_reg_1202_pp0_iter18_reg;
        tmp_reg_1202_pp0_iter20_reg <= tmp_reg_1202_pp0_iter19_reg;
        tmp_reg_1202_pp0_iter21_reg <= tmp_reg_1202_pp0_iter20_reg;
        tmp_reg_1202_pp0_iter22_reg <= tmp_reg_1202_pp0_iter21_reg;
        tmp_reg_1202_pp0_iter23_reg <= tmp_reg_1202_pp0_iter22_reg;
        tmp_reg_1202_pp0_iter24_reg <= tmp_reg_1202_pp0_iter23_reg;
        tmp_reg_1202_pp0_iter25_reg <= tmp_reg_1202_pp0_iter24_reg;
        tmp_reg_1202_pp0_iter2_reg <= tmp_reg_1202_pp0_iter1_reg;
        tmp_reg_1202_pp0_iter3_reg <= tmp_reg_1202_pp0_iter2_reg;
        tmp_reg_1202_pp0_iter4_reg <= tmp_reg_1202_pp0_iter3_reg;
        tmp_reg_1202_pp0_iter5_reg <= tmp_reg_1202_pp0_iter4_reg;
        tmp_reg_1202_pp0_iter6_reg <= tmp_reg_1202_pp0_iter5_reg;
        tmp_reg_1202_pp0_iter7_reg <= tmp_reg_1202_pp0_iter6_reg;
        tmp_reg_1202_pp0_iter8_reg <= tmp_reg_1202_pp0_iter7_reg;
        tmp_reg_1202_pp0_iter9_reg <= tmp_reg_1202_pp0_iter8_reg;
        trunc_ln113_reg_1239_pp0_iter2_reg <= trunc_ln113_reg_1239_pp0_iter1_reg;
        trunc_ln113_reg_1239_pp0_iter3_reg <= trunc_ln113_reg_1239_pp0_iter2_reg;
        trunc_ln113_reg_1239_pp0_iter4_reg <= trunc_ln113_reg_1239_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        pixel_in_1_reg_1206_pp0_iter1_reg <= pixel_in_1_reg_1206;
        pixel_in_2_reg_1211_pp0_iter1_reg <= pixel_in_2_reg_1211;
        pixel_in_3_reg_1216_pp0_iter1_reg <= pixel_in_3_reg_1216;
        pixel_in_4_reg_1223_pp0_iter1_reg <= pixel_in_4_reg_1223;
        pixel_in_5_reg_1229_pp0_iter1_reg <= pixel_in_5_reg_1229;
        pixel_in_6_reg_1234_pp0_iter1_reg <= pixel_in_6_reg_1234;
        tmp_reg_1202 <= tmp_nbreadreq_fu_228_p9;
        tmp_reg_1202_pp0_iter1_reg <= tmp_reg_1202;
        trunc_ln113_reg_1239_pp0_iter1_reg <= trunc_ln113_reg_1239;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_1202_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv3_i_reg_1259 <= grp_fu_372_p1;
        conv_i_reg_1254 <= grp_fu_369_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_1202_pp0_iter7_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        conv6_i_reg_1279 <= grp_fu_375_p1;
        mul4_i_reg_1274 <= grp_fu_359_p2;
        mul_i_reg_1269 <= grp_fu_354_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (tmp_reg_1202_pp0_iter19_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_67_fu_184 <= empty_70_fu_204;
        empty_68_fu_188 <= empty_71_fu_208;
        empty_69_fu_200 <= reuse_select46_fu_597_p3;
        empty_70_fu_204 <= trunc_ln65_fu_615_p1;
        empty_71_fu_208 <= val_fu_729_p3;
        empty_fu_180 <= empty_69_fu_200;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_1202_pp0_iter24_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_s_reg_1359 <= grp_sqrt_fixed_32_32_s_fu_338_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_nbreadreq_fu_228_p9 == 1'd1))) begin
        pixel_in_1_reg_1206 <= in_r_TKEEP_int_regslice;
        pixel_in_2_reg_1211 <= in_r_TSTRB_int_regslice;
        pixel_in_3_reg_1216 <= in_r_TUSER_int_regslice;
        pixel_in_4_reg_1223 <= in_r_TLAST_int_regslice;
        pixel_in_5_reg_1229 <= in_r_TID_int_regslice;
        pixel_in_6_reg_1234 <= in_r_TDEST_int_regslice;
        trunc_ln113_reg_1239 <= trunc_ln113_fu_446_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_reg_1202_pp0_iter25_reg == 1'd1))) begin
        q_1_fu_212 <= q_fu_192;
        q_fu_192 <= reuse_select_fu_932_p3;
        r_fu_196 <= q_1_fu_212;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_1202_pp0_iter19_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sub_ln57_2_reg_1342 <= sub_ln57_2_fu_784_p2;
        sub_ln57_5_reg_1348 <= sub_ln57_5_fu_828_p2;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone) & (tmp_nbreadreq_fu_228_p9 == 1'd0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (tmp_reg_1202_pp0_iter25_reg == 1'd0))) begin
        ap_condition_exit_pp0_iter26_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter26_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter26_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_343_ce = 1'b1;
    end else begin
        grp_fu_343_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_346_ce = 1'b1;
    end else begin
        grp_fu_346_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_350_ce = 1'b1;
    end else begin
        grp_fu_350_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_354_ce = 1'b1;
    end else begin
        grp_fu_354_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_359_ce = 1'b1;
    end else begin
        grp_fu_359_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_364_ce = 1'b1;
    end else begin
        grp_fu_364_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_369_ce = 1'b1;
    end else begin
        grp_fu_369_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_372_ce = 1'b1;
    end else begin
        grp_fu_372_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_375_ce = 1'b1;
    end else begin
        grp_fu_375_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp217))) begin
        grp_sqrt_fixed_32_32_s_fu_338_ap_ce = 1'b1;
    end else begin
        grp_sqrt_fixed_32_32_s_fu_338_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (tmp_nbreadreq_fu_228_p9 == 1'd1))) begin
        in_r_TDATA_blk_n = in_r_TVALID_int_regslice;
    end else begin
        in_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_nbreadreq_fu_228_p9 == 1'd1))) begin
        in_r_TREADY_int_regslice = 1'b1;
    end else begin
        in_r_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        line_buffer_0_ce0 = 1'b1;
    end else begin
        line_buffer_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        line_buffer_0_ce1 = 1'b1;
    end else begin
        line_buffer_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (tmp_reg_1202_pp0_iter19_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        line_buffer_0_we1 = 1'b1;
    end else begin
        line_buffer_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        line_buffer_1_ce0 = 1'b1;
    end else begin
        line_buffer_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        line_buffer_1_ce1 = 1'b1;
    end else begin
        line_buffer_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (tmp_reg_1202_pp0_iter19_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        line_buffer_1_we1 = 1'b1;
    end else begin
        line_buffer_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        line_buffer_l1_1_ce0 = 1'b1;
    end else begin
        line_buffer_l1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        line_buffer_l1_1_ce1 = 1'b1;
    end else begin
        line_buffer_l1_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_reg_1202_pp0_iter25_reg == 1'd1))) begin
        line_buffer_l1_1_we1 = 1'b1;
    end else begin
        line_buffer_l1_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter27 == 1'b1)) | ((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (tmp_reg_1202_pp0_iter25_reg == 1'd1)))) begin
        out_r_TDATA_blk_n = out_r_TREADY_int_regslice;
    end else begin
        out_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_reg_1202_pp0_iter25_reg == 1'd1))) begin
        out_r_TVALID_int_regslice = 1'b1;
    end else begin
        out_r_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln341_fu_655_p2 = ($signed(zext_ln341_fu_651_p1) + $signed(9'd385));

assign add_ln57_1_fu_760_p2 = (add_ln57_fu_754_p2 + reuse_select46_fu_597_p3);

assign add_ln57_2_fu_804_p2 = (shl_ln57_2_fu_796_p3 + sub_ln57_3_fu_790_p2);

assign add_ln57_3_fu_822_p2 = (empty_68_fu_188 + sub_ln57_4_fu_816_p2);

assign add_ln57_fu_754_p2 = (shl_ln57_fu_748_p2 + empty_fu_180);

assign addr_cmp39_fu_506_p2 = ((reuse_addr_reg36_fu_156 == zext_ln116_fu_487_p1) ? 1'b1 : 1'b0);

assign addr_cmp45_fu_497_p2 = ((reuse_addr_reg42_fu_148 == zext_ln116_fu_487_p1) ? 1'b1 : 1'b0);

assign addr_cmp_fu_525_p2 = ((reuse_addr_reg_fu_164 == zext_ln116_fu_487_p1) ? 1'b1 : 1'b0);

assign and_ln132_1_fu_969_p2 = (icmp_ln132_3_fu_963_p2 & icmp_ln132_2_fu_957_p2);

assign and_ln132_fu_943_p2 = (icmp_ln132_reg_1332_pp0_iter25_reg & icmp_ln132_1_reg_1337_pp0_iter25_reg);

assign and_ln82_fu_915_p2 = (xor_ln82_fu_897_p2 & xor_ln82_1_fu_909_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((out_r_TREADY_int_regslice == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b1)) | ((ap_loop_exit_ready_pp0_iter26_reg == 1'b1) & (regslice_both_out_V_data_V_U_apdone_blk == 1'b1)) | ((ap_enable_reg_pp0_iter26 == 1'b1) & ((regslice_both_out_V_data_V_U_apdone_blk == 1'b1) | ((out_r_TREADY_int_regslice == 1'b0) & (tmp_reg_1202_pp0_iter25_reg == 1'd1)))) | ((ap_start_int == 1'b1) & (in_r_TVALID_int_regslice == 1'b0) & (tmp_nbreadreq_fu_228_p9 == 1'd1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((out_r_TREADY_int_regslice == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b1)) | ((ap_loop_exit_ready_pp0_iter26_reg == 1'b1) & (regslice_both_out_V_data_V_U_apdone_blk == 1'b1)) | ((ap_enable_reg_pp0_iter26 == 1'b1) & ((1'b1 == ap_block_state27_io) | (regslice_both_out_V_data_V_U_apdone_blk == 1'b1) | ((out_r_TREADY_int_regslice == 1'b0) & (tmp_reg_1202_pp0_iter25_reg == 1'd1)))) | ((ap_start_int == 1'b1) & (in_r_TVALID_int_regslice == 1'b0) & (tmp_nbreadreq_fu_228_p9 == 1'd1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp217 = (((out_r_TREADY_int_regslice == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b1)) | ((ap_loop_exit_ready_pp0_iter26_reg == 1'b1) & (regslice_both_out_V_data_V_U_apdone_blk == 1'b1)) | ((ap_enable_reg_pp0_iter26 == 1'b1) & ((1'b1 == ap_block_state27_io) | (regslice_both_out_V_data_V_U_apdone_blk == 1'b1) | ((out_r_TREADY_int_regslice == 1'b0) & (tmp_reg_1202_pp0_iter25_reg == 1'd1)))) | ((ap_start_int == 1'b1) & (in_r_TVALID_int_regslice == 1'b0) & (tmp_nbreadreq_fu_228_p9 == 1'd1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((out_r_TREADY_int_regslice == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b1)) | ((ap_loop_exit_ready_pp0_iter26_reg == 1'b1) & (regslice_both_out_V_data_V_U_apdone_blk == 1'b1)) | ((ap_enable_reg_pp0_iter26 == 1'b1) & ((1'b1 == ap_block_state27_io) | (regslice_both_out_V_data_V_U_apdone_blk == 1'b1) | ((out_r_TREADY_int_regslice == 1'b0) & (tmp_reg_1202_pp0_iter25_reg == 1'd1)))) | ((ap_start_int == 1'b1) & (in_r_TVALID_int_regslice == 1'b0) & (tmp_nbreadreq_fu_228_p9 == 1'd1)));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9_ignore_call89 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10_ignore_call89 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11_ignore_call89 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12_ignore_call89 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13_ignore_call89 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14_ignore_call89 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15_ignore_call89 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16_ignore_call89 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17_ignore_call89 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18_ignore_call89 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((in_r_TVALID_int_regslice == 1'b0) & (tmp_nbreadreq_fu_228_p9 == 1'd1));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call89 = ((in_r_TVALID_int_regslice == 1'b0) & (tmp_nbreadreq_fu_228_p9 == 1'd1));
end

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19_ignore_call89 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20_ignore_call89 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21_ignore_call89 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22_ignore_call89 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23_ignore_call89 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24_ignore_call89 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25_ignore_call89 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state27_io = ((out_r_TREADY_int_regslice == 1'b0) & (tmp_reg_1202_pp0_iter25_reg == 1'd1));
end

always @ (*) begin
    ap_block_state27_pp0_stage0_iter26 = ((regslice_both_out_V_data_V_U_apdone_blk == 1'b1) | ((out_r_TREADY_int_regslice == 1'b0) & (tmp_reg_1202_pp0_iter25_reg == 1'd1)));
end

always @ (*) begin
    ap_block_state27_pp0_stage0_iter26_ignore_call89 = ((regslice_both_out_V_data_V_U_apdone_blk == 1'b1) | ((out_r_TREADY_int_regslice == 1'b0) & (tmp_reg_1202_pp0_iter25_reg == 1'd1)));
end

always @ (*) begin
    ap_block_state28_pp0_stage0_iter27 = (out_r_TREADY_int_regslice == 1'b0);
end

always @ (*) begin
    ap_block_state28_pp0_stage0_iter27_ignore_call89 = (out_r_TREADY_int_regslice == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1_ignore_call89 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call89 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call89 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4_ignore_call89 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5_ignore_call89 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6_ignore_call89 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7_ignore_call89 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8_ignore_call89 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1080 = ((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign data_V_fu_619_p1 = grp_fu_343_p1;

assign data_out_1_fu_983_p3 = ((and_ln132_fu_943_p2[0:0] == 1'b1) ? supressed_fu_921_p3 : select_ln132_fu_975_p3);

assign data_out_2_fu_991_p2 = ((data_out_1_fu_983_p3 > 16'd80) ? 1'b1 : 1'b0);

assign grp_fu_369_p0 = trunc_ln1_fu_450_p4;

assign grp_fu_372_p0 = trunc_ln14_1_fu_465_p4;

assign grp_fu_375_p0 = trunc_ln113_reg_1239_pp0_iter4_reg;

assign grp_sqrt_fixed_32_32_s_fu_338_x = (mul_ln122_1_fu_868_p2 + mul_ln122_fu_864_p2);

assign i_2_fu_564_p3 = ((pixel_in_3_reg_1216_pp0_iter18_reg[0:0] == 1'b1) ? 32'd0 : i_fu_558_p2);

assign i_fu_558_p2 = (i_1_fu_176 + 32'd1);

assign icmp_ln132_1_fu_552_p2 = (($signed(i_1_fu_176) < $signed(32'd1279)) ? 1'b1 : 1'b0);

assign icmp_ln132_2_fu_957_p2 = (($signed(tmp_48_fu_947_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln132_3_fu_963_p2 = (($signed(j_fu_172) < $signed(32'd719)) ? 1'b1 : 1'b0);

assign icmp_ln132_fu_546_p2 = (($signed(tmp_47_fu_536_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln82_1_fu_903_p2 = ((q_1_fu_212 < r_fu_196) ? 1'b1 : 1'b0);

assign icmp_ln82_fu_891_p2 = ((q_1_fu_212 < q_fu_192) ? 1'b1 : 1'b0);

assign in_r_TREADY = regslice_both_in_V_data_V_U_ack_in;

assign isNeg_fu_661_p3 = add_ln341_fu_655_p2[32'd8];

assign j_1_fu_1052_p2 = (j_fu_172 + 32'd1);

assign j_2_fu_1058_p3 = ((pixel_in_3_reg_1216_pp0_iter25_reg[0:0] == 1'b1) ? j_1_fu_1052_p2 : j_fu_172);

assign j_3_fu_1065_p3 = ((pixel_in_4_reg_1223_pp0_iter25_reg[0:0] == 1'b1) ? 32'd0 : j_2_fu_1058_p3);

assign line_buffer_0_address0 = zext_ln116_fu_487_p1;

assign line_buffer_1_address0 = zext_ln116_fu_487_p1;

assign mantissa_fu_637_p4 = {{{{1'd1}, {tmp_52_fu_633_p1}}}, {1'd0}};

assign or_ln141_fu_1021_p2 = (tmp_49_fu_1013_p3 | select_ln141_fu_1005_p3);

assign out_r_TDATA_int_regslice = $unsigned(sext_ln140_fu_1043_p1);

assign out_r_TVALID = regslice_both_out_V_data_V_U_vld_out;

assign pixel_out_data_V_fu_1035_p3 = {{select_ln141_1_fu_1027_p3}, {or_ln141_fu_1021_p2}};

assign r_V_1_fu_701_p2 = zext_ln68_fu_647_p1 << zext_ln1340_fu_691_p1;

assign r_V_fu_695_p2 = zext_ln68_fu_647_p1 >> zext_ln1340_fu_691_p1;

assign reuse_select40_fu_607_p3 = ((addr_cmp39_reg_1316[0:0] == 1'b1) ? reuse_reg35_fu_160 : line_buffer_1_q0);

assign reuse_select46_fu_597_p3 = ((addr_cmp45_reg_1305[0:0] == 1'b1) ? reuse_reg41_fu_152 : line_buffer_0_q0);

assign reuse_select_fu_932_p3 = ((addr_cmp_reg_1327_pp0_iter25_reg[0:0] == 1'b1) ? reuse_reg_fu_168 : line_buffer_l1_1_q0);

assign select_ln130_fu_997_p3 = ((data_out_2_fu_991_p2[0:0] == 1'b1) ? 8'd255 : 8'd0);

assign select_ln132_fu_975_p3 = ((and_ln132_1_fu_969_p2[0:0] == 1'b1) ? supressed_fu_921_p3 : 16'd0);

assign select_ln141_1_fu_1027_p3 = ((data_out_2_fu_991_p2[0:0] == 1'b1) ? 1'd1 : 1'd0);

assign select_ln141_fu_1005_p3 = ((data_out_2_fu_991_p2[0:0] == 1'b1) ? 16'd65280 : 16'd0);

assign sext_ln1340_fu_687_p1 = $signed(ush_fu_679_p3);

assign sext_ln1364_fu_675_p1 = $signed(sub_ln1364_fu_669_p2);

assign sext_ln140_fu_1043_p1 = $signed(pixel_out_data_V_fu_1035_p3);

assign shl_ln57_1_fu_772_p2 = empty_71_fu_208 << 32'd1;

assign shl_ln57_2_fu_796_p3 = {{empty_67_fu_184}, {1'd0}};

assign shl_ln57_3_fu_810_p2 = reuse_select40_fu_607_p3 << 32'd1;

assign shl_ln57_fu_748_p2 = empty_69_fu_200 << 32'd1;

assign sub_ln1364_fu_669_p2 = (8'd127 - tmp_51_fu_623_p4);

assign sub_ln57_1_fu_778_p2 = (sub_ln57_fu_766_p2 - shl_ln57_1_fu_772_p2);

assign sub_ln57_2_fu_784_p2 = (sub_ln57_1_fu_778_p2 - val_fu_729_p3);

assign sub_ln57_3_fu_790_p2 = (empty_fu_180 - reuse_select46_fu_597_p3);

assign sub_ln57_4_fu_816_p2 = (add_ln57_2_fu_804_p2 - shl_ln57_3_fu_810_p2);

assign sub_ln57_5_fu_828_p2 = (add_ln57_3_fu_822_p2 - val_fu_729_p3);

assign sub_ln57_fu_766_p2 = (add_ln57_1_fu_760_p2 - empty_68_fu_188);

assign supressed_fu_921_p3 = ((and_ln82_fu_915_p2[0:0] == 1'b1) ? q_1_fu_212 : 16'd0);

assign tmp_46_fu_707_p3 = r_V_fu_695_p2[32'd24];

assign tmp_47_fu_536_p4 = {{i_1_fu_176[31:1]}};

assign tmp_48_fu_947_p4 = {{j_fu_172[31:1]}};

assign tmp_49_fu_1013_p3 = {{8'd0}, {select_ln130_fu_997_p3}};

assign tmp_51_fu_623_p4 = {{data_V_fu_619_p1[30:23]}};

assign tmp_52_fu_633_p1 = data_V_fu_619_p1[22:0];

assign tmp_nbreadreq_fu_228_p9 = in_r_TVALID_int_regslice;

assign tmp_s_fu_719_p4 = {{r_V_1_fu_701_p2[55:24]}};

assign trunc_ln113_fu_446_p1 = in_r_TDATA_int_regslice[7:0];

assign trunc_ln14_1_fu_465_p4 = {{in_r_TDATA_int_regslice[15:8]}};

assign trunc_ln1_fu_450_p4 = {{in_r_TDATA_int_regslice[23:16]}};

assign trunc_ln65_fu_615_p1 = reuse_select40_fu_607_p3[30:0];

assign ush_fu_679_p3 = ((isNeg_fu_661_p3[0:0] == 1'b1) ? sext_ln1364_fu_675_p1 : add_ln341_fu_655_p2);

assign val_fu_729_p3 = ((isNeg_fu_661_p3[0:0] == 1'b1) ? zext_ln671_fu_715_p1 : tmp_s_fu_719_p4);

assign xor_ln82_1_fu_909_p2 = (icmp_ln82_1_fu_903_p2 ^ 1'd1);

assign xor_ln82_fu_897_p2 = (icmp_ln82_fu_891_p2 ^ 1'd1);

assign zext_ln116_fu_487_p1 = i_1_fu_176;

assign zext_ln1340_fu_691_p1 = $unsigned(sext_ln1340_fu_687_p1);

assign zext_ln341_fu_651_p1 = tmp_51_fu_623_p4;

assign zext_ln671_fu_715_p1 = tmp_46_fu_707_p3;

assign zext_ln68_fu_647_p1 = mantissa_fu_637_p4;

endmodule //sobel
